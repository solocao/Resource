1、数据库中表关系
	一对一
	一对多（多对一）
	多对多
2、如何确立和实现数据库中的表关系
	一对多的表关系在数据库中如何实现?
		使用外键约束。
		我们一般习惯把一的方称为主表，把多的一方称为从表。
		什么是外键：
		    从表中有一列，该列的取值除了null之外，只能来源于主表的主键。
		    默认情况下，外键字段的值是可以重复的。
	多对多的表关系在数据库中如何实现？
		使用中间表。
		中间表中只有两个外键，引用两个多对多表的主键。
		不能有其他字段信息，至于中间表的主键，应该采用联合主键。
		
		任何一个多方的表和中间表去比较，都是一对多的关系。
	
	一对一的表关系在数据库中如何实现？
		有两种：
		第一种：建立外键的方式：
			使用外键约束，唯一约束，非空约束。
			它是把外键字段加了非空和唯一约束。从而实现了一对一。
		第二种：使用主键的方式：
			让其中一张表既是主键，又是外键。
	如何确立两张表之间的关系：
		找外键。
		此种方式能解决确立表关系中90%的情况，剩余的10%请听项目阶段的打断设计。

3、学习多表映射配置要遵循的步骤
	第一步：确定两张表之间的关系
	第二步：在数据库中实现两张表之间的关系建立
	第三步：在实体类中描述出两个实体之间的关系
	第四步：在映射配置文件中建立两个实体和两张表之间的关系
4、一对多关系映射配置及操作
	示例：客户和联系人两张表

	第一步：确定两张表之间的关系
		一个客户可以包含多个联系人
		多个联系人可以属于同一个客户
		所以我们说：客户和联系人之间的关系是一对多。

	第二步：在数据库中实现两张表之间的关系建立
		实现一对多的关系，靠外键。
		客户表是主表，联系人表是从表。
		我们需要在联系人表中添加外键。

	第三步：在实体类中描述出两个实体之间的关系
		主表的实体类应该包含从表实体类的集合引用
		从表的实体类应该包含主表实体类的对象引用

	第四步：在映射配置文件中建立两个实体和两张表之间的关系
5、多对多关系映射配置及操作
	示例：用户和角色

	第一步：确定两张表之间的关系
		一个用户可以有多个角色
		一个角色可以赋给多个用户
		所以用户和角色之间是多对多。

	第二步：在数据库中实现两张表之间的关系建立
		在数据库中实现多对多要靠中间表。
		中间表中只能出现用户和角色主键。

	第三步：在实体类中描述出两个实体之间的关系
		各自包含对方一个集合引用
		

	第四步：在映射配置文件中建立两个实体和两张表之间的关系
-------------------------------------------------------------
create table student_teacher_ref(
	sid int,
	tid int,
	primary key(sid,tid),
	constraint FK_STUDENT_ID foreign key (sid) references student(sid),
	constraint FK_TEACHER_ID foreign key (tid) references teacher(tid)
);

create table student(
	sid int primary key auto_increment,
	sname varchar(20),
	sgender varchar(10)
);

create table teacher(
	tid int primary key auto_increment,
	tname varchar(20),
	tsalary double(7,2)
);